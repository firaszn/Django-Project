# Generated by Django 5.0 on 2025-10-30 23:18

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('pending', 'Pending')], default='active', max_length=20, verbose_name='status')),
                ('profilePicture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='profile picture')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='bio')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='phone number')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('verified', models.BooleanField(default=False, help_text='Indicates if the user has verified their email address', verbose_name='verified')),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], default='user', max_length=10, verbose_name='role')),
                ('journal_pin', models.CharField(blank=True, help_text='Hashed 4-digit PIN for accessing hidden journals', max_length=128, null=True, verbose_name='journal pin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apple_username', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Apple ID')),
                ('encrypted_apple_password', models.BinaryField(blank=True, null=True)),
                ('is_apple_connected', models.BooleanField(default=False, verbose_name='Connected to Apple Reminders')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Timezone')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='Language')),
                ('notification_preferences', models.JSONField(default=dict, help_text='User preferences for notifications', verbose_name='Notification Preferences')),
                ('apple_calendar_id', models.CharField(blank=True, max_length=255, null=True)),
                ('last_apple_sync', models.DateTimeField(blank=True, null=True)),
                ('reminders_webhook_url', models.URLField(blank=True, null=True)),
                ('reminders_webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
