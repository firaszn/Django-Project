from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.utils import timezone
from django.db.models import Avg
from datetime import timedelta
import random

class Command(BaseCommand):
    help = 'Peuple la base de donn√©es avec des donn√©es de test pour Statistics & Insights'

    def handle(self, *args, **options):
        from journal.models import Journal
        from statistics_and_insights.models import EntryAnalytics, UserStatistics, MoodTrend, WeeklyInsight, CustomReport

        # R√©cup√©rer un utilisateur
        User = get_user_model()
        try:
            user = User.objects.get(username='testuser')
        except User.DoesNotExist:
            user = User.objects.create_user(
                username='testuser',
                email='test@example.com',
                password='testpass123'
            )
            self.stdout.write(self.style.SUCCESS('‚úÖ Utilisateur test cr√©√©'))

        # Nettoyer les anciennes donn√©es
        EntryAnalytics.objects.filter(user=user).delete()
        UserStatistics.objects.filter(user=user).delete()
        MoodTrend.objects.filter(user=user).delete()
        WeeklyInsight.objects.filter(user=user).delete()
        CustomReport.objects.filter(user=user).delete()
        
        # Supprimer les entr√©es de journal associ√©es
        Journal.objects.filter(user=user).delete()

        self.stdout.write(self.style.SUCCESS('üóëÔ∏è Anciennes donn√©es supprim√©es'))

        # Donn√©es de test
        entries_data = [
            {
                'title': 'Belle journ√©e ensoleill√©e',
                'content': "Aujourd'hui a √©t√© une journ√©e incroyable. J'ai termin√© mon projet avec succ√®s et j'ai re√ßu des compliments de mon √©quipe. Le soleil brillait et je me sens vraiment reconnaissant pour tout ce que j'ai accompli.",
                'mood_score': 0.8,
                'sentiment': 'very_positive',
                'word_count': 85,
                'emotions': {'heureux': 3, 'productif': 2, 'gratitude': 1},
                'keywords': ['projet', 'succ√®s', 'compliments', 'soleil', 'reconnaissant'],
                'themes': [{'theme': 'work', 'confidence': 0.6, 'matched_keywords': ['projet', '√©quipe']}]
            },
            {
                'title': 'Journ√©e stressante au travail',
                'content': "Beaucoup de pression aujourd'hui avec les deadlines. Les r√©unions se sont encha√Æn√©es et je me sens un peu d√©pass√©. J'esp√®re que demain sera plus calme.",
                'mood_score': -0.4,
                'sentiment': 'negative',
                'word_count': 65,
                'emotions': {'stress√©': 2, 'anxieux': 1, 'fatigu√©': 1},
                'keywords': ['pression', 'deadlines', 'r√©unions', 'd√©pass√©'],
                'themes': [{'theme': 'work', 'confidence': 0.8, 'matched_keywords': ['travail', 'deadlines', 'r√©unions']}]
            },
            {
                'title': 'Moment en famille',
                'content': "D√Æner en famille ce soir. C'√©tait agr√©able de passer du temps avec mes proches. Nous avons rigol√© et partag√© de bons moments. Ces instants simples sont pr√©cieux.",
                'mood_score': 0.6,
                'sentiment': 'positive',
                'word_count': 45,
                'emotions': {'heureux': 2, 'calme': 1, 'amour': 1},
                'keywords': ['famille', 'proches', 'rigol√©', 'moments', 'pr√©cieux'],
                'themes': [{'theme': 'family', 'confidence': 0.9, 'matched_keywords': ['famille', 'proches']}]
            },
            {
                'title': 'R√©flexion du matin',
                'content': "Je me suis lev√© t√¥t pour m√©diter. La tranquillit√© du matin m'aide √† clarifier mes pens√©es. Je me sens pr√™t √† affronter la journ√©e.",
                'mood_score': 0.3,
                'sentiment': 'positive',
                'word_count': 35,
                'emotions': {'calme': 2, 'productif': 1},
                'keywords': ['m√©diter', 'tranquillit√©', 'pens√©es', 'pr√™t', 'journ√©e'],
                'themes': [{'theme': 'reflection', 'confidence': 0.7, 'matched_keywords': ['m√©diter', 'pens√©es']}]
            },
            {
                'title': 'D√©fi technique',
                'content': "J'ai rencontr√© un bug difficile √† r√©soudre aujourd'hui. C'√©tait frustrant mais j'ai finalement trouv√© la solution. J'ai appris beaucoup dans le processus.",
                'mood_score': -0.1,
                'sentiment': 'neutral',
                'word_count': 40,
                'emotions': {'frustr√©': 1, 'productif': 1, 'apprentissage': 1},
                'keywords': ['bug', 'solution', 'appris', 'processus'],
                'themes': [{'theme': 'work', 'confidence': 0.5, 'matched_keywords': ['bug', 'solution']}]
            }
        ]

        # Cr√©er les entr√©es et analytics
        for i, data in enumerate(entries_data):
            journal = Journal.objects.create(
                user=user,
                title=data['title'],
                description=data['content'],
                created_at=timezone.now() - timedelta(days=i*2)
            )
            
            EntryAnalytics.objects.create(
                user=user,
                entry=journal,
                mood_score=data['mood_score'],
                sentiment=data['sentiment'],
                word_count=data['word_count'],
                emotions=data['emotions'],
                reading_time=max(1, data['word_count'] // 200),
                keywords=data['keywords'],
                themes=data['themes']
            )
            self.stdout.write(f"‚úÖ Entr√©e cr√©√©e: {journal.title}")

        # Cr√©er des tendances d'humeur pour les 30 derniers jours
        today = timezone.now().date()
        emotions_list = ['heureux', 'triste', 'calme', 'stress√©', 'productif']
        
        for i in range(30):
            date = today - timedelta(days=29-i)
            avg_mood = random.uniform(-0.5, 0.8)
            entry_count = random.randint(0, 3)
            
            MoodTrend.objects.create(
                user=user,
                date=date,
                average_mood=round(avg_mood, 2),
                entry_count=entry_count,
                dominant_emotion=random.choice(emotions_list),
                mood_volatility=random.uniform(0.1, 0.5)
            )

        # Cr√©er/mettre √† jour les statistiques utilisateur
        user_stats, created = UserStatistics.objects.get_or_create(user=user)
        user_stats.total_entries = Journal.objects.filter(user=user).count()
        user_stats.current_streak = 5
        user_stats.longest_streak = 10
        
        analytics_data = EntryAnalytics.objects.filter(user=user).aggregate(
            avg_mood=Avg('mood_score'),
            avg_word_count=Avg('word_count'),
            total_words=Avg('word_count')
        )
        
        user_stats.average_mood = analytics_data['avg_mood'] or 0
        user_stats.average_word_count = analytics_data['avg_word_count'] or 0
        user_stats.total_words_written = analytics_data['total_words'] or 0
        user_stats.favorite_topics = ['work', 'family', 'reflection']
        user_stats.writing_consistency = 0.7
        user_stats.save()

        # Cr√©er un insight hebdomadaire
        week_start = today - timedelta(days=7)
        week_end = today
        
        WeeklyInsight.objects.create(
            user=user,
            week_start=week_start,
            week_end=week_end,
            insights={
                'total_entries': 3,
                'average_mood': 0.4,
                'average_word_count': 55,
                'most_active_day': 'Lundi',
                'mood_trend': 'am√©lioration',
                'total_words': 165
            },
            patterns=[
                "√âcriture plus productive les matins",
                "Humeur positive apr√®s l'exercice",
                "Plus d'entr√©es les jours de semaine"
            ],
            recommendations=[
                "üíÜ Essayez d'√©crire le matin pour plus de productivit√©",
                "üåû Profitez des jours ensoleill√©s pour am√©liorer votre humeur",
                "üìñ Continuez votre excellente habitude d'√©criture"
            ],
            achievements=["3 jours cons√©cutifs d'√©criture", "Humeur en am√©lioration"],
            challenges=["Stress li√© au travail", "Manque de temps le weekend"]
        )

        # Cr√©er des rapports personnalis√©s
        CustomReport.objects.create(
            user=user,
            title="Analyse Mensuelle de l'Humeur",
            description="Rapport complet sur mes tendances d'humeur sur 30 jours",
            report_type="mood_analysis",
            date_range_start=today - timedelta(days=30),
            date_range_end=today,
            data={
                'period_summary': {
                    'total_entries': 5,
                    'days_analyzed': 30,
                    'start_date': str(today - timedelta(days=30)),
                    'end_date': str(today)
                },
                'mood_analysis': {
                    'average_mood': 0.24,
                    'mood_range': '-0.4 - 0.8',
                    'stability': 'variable',
                    'trend': 'positive'
                },
                'writing_analysis': {
                    'average_length': 54,
                    'total_words': 270,
                    'consistency': 'variable',
                    'preferred_time': 'matin'
                },
                'ai_insights': {
                    'mood_patterns': ['Humeur moyenne: 0.24', 'üìà Votre humeur s\'est am√©lior√©e r√©cemment!'],
                    'writing_style': {'average_length': 54.0, 'consistency': 'variable', 'preferred_length': 'moyen'},
                    'productivity_insights': ['üìù Vos entr√©es sont concises et efficaces.'],
                    'personal_growth': ['üéØ Votre th√®me principal: work']
                },
                'personalized_recommendations': [
                    "üíñ Pensez √† pratiquer la gratitude quotidiennement",
                    "üìö Essayez d'√©crire des entr√©es plus d√©taill√©es pour mieux explorer vos pens√©es"
                ]
            }
        )

        CustomReport.objects.create(
            user=user,
            title="Habitudes d'√âcriture",
            description="Analyse de mes patterns d'√©criture et productivit√©",
            report_type="writing_habits",
            date_range_start=today - timedelta(days=14),
            date_range_end=today,
            data={
                'writing_habits': {
                    'average_daily_entries': 0.36,
                    'preferred_length': 'moyen',
                    'consistency_score': 0.7,
                    'peak_hours': ['09:00', '20:00']
                }
            }
        )

        self.stdout.write(self.style.SUCCESS('\n' + "="*50))
        self.stdout.write(self.style.SUCCESS('‚úÖ DONN√âES DE TEST CR√â√âES AVEC SUCC√àS!'))
        self.stdout.write(self.style.SUCCESS("="*50))
        self.stdout.write(self.style.SUCCESS(f"üë§ Utilisateur: {user.username}"))
        self.stdout.write(self.style.SUCCESS(f"üìù Entr√©es cr√©√©es: {user_stats.total_entries}"))
        self.stdout.write(self.style.SUCCESS(f"üìä Statistiques mises √† jour"))
        self.stdout.write(self.style.SUCCESS(f"üìà Tendances d'humeur: 30 jours"))
        self.stdout.write(self.style.SUCCESS(f"üí° Insights hebdomadaires: 1 cr√©√©"))
        self.stdout.write(self.style.SUCCESS(f"üìã Rapports personnalis√©s: 2 cr√©√©s"))
        self.stdout.write(self.style.SUCCESS("\nüåê Acc√©dez √†: http://127.0.0.1:8000/statistics/"))
        self.stdout.write(self.style.SUCCESS("üë§ Connectez-vous avec: testuser / testpass123"))